#version 440

layout (vertices = 4) out;

layout( std430, binding = 0 ) buffer NodeVecU {
	readonly float nVecU[]; 
};

layout( std430, binding = 1 ) buffer NodeVecV {
	readonly float nVecV[]; 
};

in ivec2 patch_id[];
out ivec2 patch_id2[];

int p = 3;
int q = 3;


uniform int n_seg_n;
uniform int n_seg_m;

uniform int tess_in;
uniform int tess_out;


void main() {

	gl_TessLevelOuter[0] = tess_out;
	gl_TessLevelOuter[1] = tess_out;
	gl_TessLevelOuter[2] = tess_out;
	gl_TessLevelOuter[3] = tess_out;
 
	gl_TessLevelInner[0] = tess_in;
	gl_TessLevelInner[1] = tess_in;

	int x = patch_id[gl_InvocationID].x % n_seg_m;
	int y = (patch_id[gl_InvocationID].x-x) / n_seg_m;


	float a = nVecV[p+x];
	float b = nVecV[p+x+1];
	float c = nVecU[q+y];
	float d = nVecU[q+y+1];

	patch_id2[gl_InvocationID] = patch_id[gl_InvocationID];

	
	if (gl_InvocationID==0) gl_out[gl_InvocationID].gl_Position = vec4(c, a, 0, 1);
	if (gl_InvocationID==1) gl_out[gl_InvocationID].gl_Position = vec4(c, b, 0, 1);
	if (gl_InvocationID==2) gl_out[gl_InvocationID].gl_Position = vec4(d, b, 0, 1);
	if (gl_InvocationID==3) gl_out[gl_InvocationID].gl_Position = vec4(d, a, 0, 1);
	
	float temp = gl_out[gl_InvocationID].gl_Position.x;
	gl_out[gl_InvocationID].gl_Position.x = gl_out[gl_InvocationID].gl_Position.y;
	gl_out[gl_InvocationID].gl_Position.y = temp;

	/*
	if (patch_id[gl_InvocationID].x==0) {
	if (gl_InvocationID==0) gl_out[gl_InvocationID].gl_Position = vec4(0.0, 0.0, 0, 1);
	if (gl_InvocationID==1) gl_out[gl_InvocationID].gl_Position = vec4(0.0, 0.25, 0, 1);
	if (gl_InvocationID==2) gl_out[gl_InvocationID].gl_Position = vec4(1.0/3, 0.25, 0, 1);
	if (gl_InvocationID==3) gl_out[gl_InvocationID].gl_Position = vec4(1.0/3, 0.0, 0, 1);
	} else {
	if (gl_InvocationID==0) gl_out[gl_InvocationID].gl_Position = vec4(0.0, 0.5, 0, 1);
	if (gl_InvocationID==1) gl_out[gl_InvocationID].gl_Position = vec4(0.0, 0.75, 0, 1);
	if (gl_InvocationID==2) gl_out[gl_InvocationID].gl_Position = vec4(2.0/3, 0.75, 0, 1);
	if (gl_InvocationID==3) gl_out[gl_InvocationID].gl_Position = vec4(2.0/3, 0.5, 0, 1);
	}
	*/
	
}
